#!/usr/bin/env ruby

require 'json'
require 'yaml'

require 'spiceweasel'

#process command line options
begin
  ARGV << "-h" if ARGV.empty?
  cli = Spiceweasel::CLI.new
  cli.parse_options
  DEBUG = cli.config[:debug]
rescue OptionParser::InvalidOption => e
  STDERR.puts e.message
  puts cli.opt_parser.to_s
  exit(-1)
end

begin
  file = ARGV.last
  STDOUT.puts "DEBUG: file: #{file}" if cli.config[:debug]
  if (file.end_with?(".yml"))
    input = YAML.load_file ARGV.last
  elsif (file.end_with?(".json"))
    input = JSON.parse(File.read(ARGV.last))
  else
    raise "Unknown file type, please use a file ending with either '.json' or '.yml'."
    exit(-1)
  end
rescue JSON::ParserError => e
  STDERR.puts e.message
  STDERR.puts "Parsing error in the infrastructure file provided."
  exit(-1)
rescue Exception
  STDERR.puts "No infrastructure .json or .yml file provided."
  puts cli.opt_parser.to_s
  exit(-1)
end

create = String.new()
delete = String.new()

cookbook_list = Spiceweasel::CookbookList.new(input['cookbooks'])
environment_list = Spiceweasel::EnvironmentList.new(input['environments'])
role_list = Spiceweasel::RoleList.new(input['roles'])
data_bag_list = Spiceweasel::DataBagList.new(input['data bags'])

node_list = Spiceweasel::NodeList.new(input['nodes'], cookbook_list, environment_list, role_list)

create += cookbook_list.create
create += environment_list.create
create += role_list.create
create += data_bag_list.create
create += node_list.create

delete += cookbook_list.delete
delete += environment_list.delete
delete += role_list.delete
delete += data_bag_list.delete
delete += node_list.delete

#just print the knife commands, do not execute
#if cli.config[:dryrun]
if cli.config[:delete]
  puts delete unless delete.empty?
elsif cli.config[:rebuild]
  puts delete unless delete.empty?
  puts create unless create.empty?
else
  puts create unless create.empty?
end
#else
#eventually we will execute instead of printing knife commands
#puts "BAM!"
#end
